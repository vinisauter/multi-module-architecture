// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target arm64-apple-ios14.1-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Networking
import Foundation
@_exported import Networking
import NetworkingInterfaces
import Swift
@_hasMissingDesignatedInitializers final public class LibTwoHTTPClient : NetworkingInterfaces.HTTPClientProtocol {
  final public func get(_ url: Swift.String, completion: @escaping (Swift.String) -> Swift.Void)
  final public func post(_ url: Swift.String, completion: @escaping (Swift.String) -> Swift.Void)
  final public func put(_ url: Swift.String, completion: @escaping (Swift.String) -> Swift.Void)
  final public func delete(_ url: Swift.String, completion: @escaping (Swift.String) -> Swift.Void)
  @objc deinit
}
public protocol NetworkingDependencyProtocol : AnyObject {
  func getCertificate(with publicKey: Swift.String) -> Swift.String
}
open class NetworkingProvider : NetworkingInterfaces.NetworkingProviderProtocol {
  final public let publicKey: Swift.String
  public init(networkingDependency: Networking.NetworkingDependencyProtocol)
  public func getSecureHttpClient() -> NetworkingInterfaces.HTTPClientProtocol
  public func getInsecureHttpClient() -> NetworkingInterfaces.HTTPClientProtocol
  @objc deinit
}
@_hasMissingDesignatedInitializers final public class LibOneHTTPClient : NetworkingInterfaces.HTTPClientProtocol {
  final public func get(_ url: Swift.String, completion: @escaping (Swift.String) -> Swift.Void)
  final public func post(_ url: Swift.String, completion: @escaping (Swift.String) -> Swift.Void)
  final public func put(_ url: Swift.String, completion: @escaping (Swift.String) -> Swift.Void)
  final public func delete(_ url: Swift.String, completion: @escaping (Swift.String) -> Swift.Void)
  @objc deinit
}
